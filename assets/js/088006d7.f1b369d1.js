"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7318],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),u=i,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||n;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<n;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7756:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var a=r(7462),i=(r(7294),r(3905));const n={id:"image_media_object",title:"Image_Media_Object"},o="Image Media Object",l={unversionedId:"api-reference/types/image_media_object",id:"api-reference/types/image_media_object",title:"Image_Media_Object",description:"The object required for sending an image message. Can either be a self-hosted and publicly accessible image, or an existing Meta-hosted image in a supported format. Meta or self hosted options have different object requirements.",source:"@site/docs/api-reference/types/image_media_object.md",sourceDirName:"api-reference/types",slug:"/api-reference/types/image_media_object",permalink:"/WhatsApp-Nodejs-SDK/api-reference/types/image_media_object",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-reference/types/image_media_object.md",tags:[],version:"current",frontMatter:{id:"image_media_object",title:"Image_Media_Object"},sidebar:"mainSidebar",previous:{title:"Header_Object",permalink:"/WhatsApp-Nodejs-SDK/api-reference/types/header_object"},next:{title:"Interactive_Object",permalink:"/WhatsApp-Nodejs-SDK/api-reference/types/interactive_object"}},s={},p=[{value:"Meta Hosted Image",id:"meta-hosted-image",level:2},{value:"Example",id:"example",level:3},{value:"Properties",id:"properties",level:3},{value:"Self Hosted Image",id:"self-hosted-image",level:2},{value:"Example",id:"example-1",level:3},{value:"Properties",id:"properties-1",level:3}],c={toc:p},m="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(m,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"image-media-object"},"Image Media Object"),(0,i.kt)("p",null,"The object required for sending an image message. Can either be a self-hosted and publicly accessible image, or an existing Meta-hosted image in a supported format. Meta or self hosted options have different object requirements."),(0,i.kt)("h2",{id:"meta-hosted-image"},"Meta Hosted Image"),(0,i.kt)("p",null,"This image must already exist in PNG or JPG format."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id" : "IMAGE_ID",\n    "caption" : "CAPTION"\n}\n')),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"id")," : string \u2014 the image Id. This Id is returned in the response body when the image was first uploaded."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"caption")," : string (optional) \u2014 text to be displayed with the image to describe the image.")),(0,i.kt)("h2",{id:"self-hosted-image"},"Self Hosted Image"),(0,i.kt)("p",null,"The image must be readily accessible by public addresses and in PNG or JPG format."),(0,i.kt)("h3",{id:"example-1"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "link" : new URL( "https://www.example.com" ).href,\n    "caption" : "CAPTION"\n}\n')),(0,i.kt)("h3",{id:"properties-1"},"Properties"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"link")," :  string \u2014 link to the publicly hosted image."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"caption")," : string (optional) \u2014 text to be displayed with the image to describe the image.")))}d.isMDXComponent=!0}}]);